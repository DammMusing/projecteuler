/**
Problem 2: Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

package main

import "testing"

func TestSumEvenFibs(t *testing.T) {
	type args struct {
		upper_bound int
	}
	tests := []struct {
		name string
		args args
		want int
	}{
		{name: "sanity check", args: args{upper_bound: 100}, want: 44},
		{name: "answer", args: args{upper_bound: 4000000}, want: 4613732},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := SumEvenFibs(tt.args.upper_bound); got != tt.want {
				t.Errorf("SumEvenFibs() = %v, want %v", got, tt.want)
			}
		})
	}
}
